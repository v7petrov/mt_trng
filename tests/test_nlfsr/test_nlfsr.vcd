$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module test_nlfsr $end
  $var wire 1 S clk $end
  $var wire 1 # rst $end
  $var wire 1 $ warbler_o1 $end
  $var wire 1 % nlfsr3_ce1 $end
  $var wire 1 & d1 $end
  $var wire 1 ' init1 $end
  $var wire 1 ( load1 $end
  $var wire 1 > a0_1 $end
  $var wire 1 ) warbler_o2 $end
  $var wire 1 * nlfsr3_ce2 $end
  $var wire 1 + d2 $end
  $var wire 1 , init2 $end
  $var wire 1 - load2 $end
  $var wire 1 ? b0_2 $end
  $var wire 1 . load3 $end
  $var wire 1 / init3 $end
  $var wire 1 0 nlfsr3_ce3 $end
  $var wire 5 1 d3 [4:0] $end
  $var wire 5 2 tk [4:0] $end
  $var wire 1 @ o_warbler3 $end
  $var wire 32 T CLK_PERIOD [31:0] $end
  $scope module NLFSR1 $end
   $var wire 1 S clk $end
   $var wire 1 # rst $end
   $var wire 1 $ warbler_o $end
   $var wire 1 % nlfsr3_ce $end
   $var wire 1 & d1 $end
   $var wire 1 ' init $end
   $var wire 1 ( load $end
   $var wire 1 > a0 $end
   $var wire 17 A a [16:0] $end
   $var wire 1 3 mux0_in $end
   $var wire 1 B mux1_in $end
   $var wire 1 4 mux0_o $end
   $var wire 1 5 mux1_o $end
   $var wire 1 6 mux2_o $end
   $var wire 1 C wgt1_5o $end
   $scope module mux0 $end
    $var wire 1 % sel $end
    $var wire 1 U a $end
    $var wire 1 3 b $end
    $var wire 1 4 y $end
   $upscope $end
   $scope module mux1 $end
    $var wire 1 ' sel $end
    $var wire 1 B a $end
    $var wire 1 4 b $end
    $var wire 1 5 y $end
   $upscope $end
   $scope module mux2 $end
    $var wire 1 ( sel $end
    $var wire 1 5 a $end
    $var wire 1 & b $end
    $var wire 1 6 y $end
   $upscope $end
   $scope module wlut $end
    $var wire 5 D address [4:0] $end
    $var wire 1 C wgt1_5o $end
    $var wire 32 V LUT [31:0] $end
   $upscope $end
  $upscope $end
  $scope module NLFSR2 $end
   $var wire 1 S clk $end
   $var wire 1 # rst $end
   $var wire 1 ) warbler_o $end
   $var wire 1 * nlfsr3_ce $end
   $var wire 1 + d2 $end
   $var wire 1 , init $end
   $var wire 1 - load $end
   $var wire 1 ? b0 $end
   $var wire 16 E b [15:0] $end
   $var wire 1 7 mux0_in $end
   $var wire 1 F mux1_in $end
   $var wire 1 8 mux0_o $end
   $var wire 1 9 mux1_o $end
   $var wire 1 : mux2_o $end
   $var wire 1 G wgt1_5o $end
   $scope module mux0 $end
    $var wire 1 * sel $end
    $var wire 1 U a $end
    $var wire 1 7 b $end
    $var wire 1 8 y $end
   $upscope $end
   $scope module mux1 $end
    $var wire 1 , sel $end
    $var wire 1 F a $end
    $var wire 1 8 b $end
    $var wire 1 9 y $end
   $upscope $end
   $scope module mux2 $end
    $var wire 1 - sel $end
    $var wire 1 9 a $end
    $var wire 1 + b $end
    $var wire 1 : y $end
   $upscope $end
   $scope module wlut $end
    $var wire 5 H address [4:0] $end
    $var wire 1 G wgt1_5o $end
    $var wire 32 V LUT [31:0] $end
   $upscope $end
  $upscope $end
  $scope module NLFSR3 $end
   $var wire 1 S clk $end
   $var wire 1 # rst $end
   $var wire 1 . load $end
   $var wire 1 / init $end
   $var wire 1 0 nlfsr3_ce $end
   $var wire 5 1 d3 [4:0] $end
   $var wire 5 2 tk [4:0] $end
   $var wire 1 @ o_warbler $end
   $var wire 5 ; next_C5 [4:0] $end
   $var wire 5 I C5 [4:0] $end
   $var wire 5 J C4 [4:0] $end
   $var wire 5 K C3 [4:0] $end
   $var wire 5 L C2 [4:0] $end
   $var wire 5 M C1 [4:0] $end
   $var wire 5 N C0 [4:0] $end
   $var wire 5 O node1 [4:0] $end
   $var wire 5 < node2 [4:0] $end
   $var wire 5 = node3 [4:0] $end
   $var wire 5 P gamma_out [4:0] $end
   $var wire 1 Q wgt2_5o $end
   $var wire 5 R pad_wgt2 [4:0] $end
   $scope module WGT1_5_inst $end
    $var wire 5 M address [4:0] $end
    $var wire 1 @ wgt1_5o $end
    $var wire 32 V LUT [31:0] $end
   $upscope $end
   $scope module WGT2_5_inst $end
    $var wire 5 I address [4:0] $end
    $var wire 1 Q wgt2_5o $end
    $var wire 32 W LUT [31:0] $end
   $upscope $end
   $scope module bigmux2to1_inst $end
    $var wire 1 . sel $end
    $var wire 5 = a [4:0] $end
    $var wire 5 1 b [4:0] $end
    $var wire 5 ; y [4:0] $end
   $upscope $end
   $scope module gamma_mult_inst $end
    $var wire 5 R x [4:0] $end
    $var wire 5 P y [4:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
b00000 1
b00000 2
13
04
15
16
17
08
19
1:
b01101 ;
b01100 <
b01101 =
0>
0?
1@
b00000000000000000 A
1B
1C
b00000 D
b0000000000000000 E
1F
1G
b00000 H
b00000 I
b00000 J
b00000 K
b00000 L
b00000 M
b00000 N
b01100 O
b01100 P
1Q
b00001 R
0S
b00000000000000000000000000001010 T
0U
b00100111011110001010001101100101 V
b00000100000111111101110010011101 W
#5000
b10000000000000000 A
b1000000000000000 E
1S
#10000
1#
1$
1'
03
05
06
b00000000000000000 A
b0000000000000000 E
0S
#15000
1S
#20000
0#
1%
0S
#25000
b1000000000000000 E
1S
#30000
0'
15
16
0S
#35000
b10000000000000000 A
b1100000000000000 E
1S
#40000
1&
1'
1(
05
0S
#45000
13
14
15
b11000000000000000 A
0B
0C
b10000 D
b1110000000000000 E
1S
#50000
0%
0'
0(
04
05
06
0S
#55000
07
09
0:
b01100000000000000 A
b1111000000000000 E
0F
0G
b10000 H
1S
#60000
1(
16
0S
#65000
03
15
b10110000000000000 A
1B
1C
b00000 D
b0111100000000000 E
1S
#70000
1#
1,
17
b00000000000000000 A
b0000000000000000 E
1F
1G
b00000 H
0S
#75000
1S
#80000
0#
1+
1-
1:
0S
#85000
b10000000000000000 A
b1000000000000000 E
1S
#90000
0-
0:
0S
#95000
13
05
b11000000000000000 A
0B
0C
b10000 D
b0100000000000000 E
1S
#100000
0,
19
1:
0S
#105000
b11100000000000000 A
b1010000000000000 E
1S
#110000
1*
18
0S
#115000
07
08
09
0:
b11110000000000000 A
b1101000000000000 E
0F
0G
b10000 H
1S
#120000
1#
1/
b01010 1
b00101 2
03
15
17
18
19
1:
b01000 ;
b01001 <
b01000 =
b00000000000000000 A
1B
1C
b00000 D
b0000000000000000 E
1F
1G
b00000 H
0S
#125000
1S
#130000
0#
10
0S
#135000
b00101 ;
b00101 <
b00101 =
b10000000000000000 A
b1000000000000000 E
b01000 I
b00000 O
b00000 P
0Q
b00000 R
1S
#140000
0/
0S
#145000
13
05
b11000000000000000 A
0B
0C
b10000 D
b1100000000000000 E
b00101 I
b01000 J
1S
#150000
1.
b00011 1
b00011 ;
0S
#155000
b01001 <
b01000 =
b11100000000000000 A
b1110000000000000 E
b00011 I
b00101 J
b01000 K
b01100 O
b01100 P
1Q
b00001 R
1S
#160000
0.
00
b01000 ;
0S
#165000
07
08
09
0:
b11110000000000000 A
b1111000000000000 E
0F
0G
b10000 H
1S
#170000
10
0S
#175000
b00101 ;
b00101 <
b00101 =
b11111000000000000 A
b0111100000000000 E
b01000 I
b00011 J
b00101 K
b01000 L
b00000 O
b00000 P
0Q
b00000 R
1S
#180000
0S
#185000
b01101 ;
b01101 <
b01101 =
b11111100000000000 A
b0011110000000000 E
b00101 I
b01000 J
b00011 K
b00101 L
b01000 M
b01000 O
1S
#190000
0S
#195000
03
15
17
18
19
1:
b00000 ;
b00000 <
b00000 =
b11111110000000000 A
1B
1C
b11000 D
b0001111000000000 E
1F
1G
b11000 H
b01101 I
b00101 J
b01000 K
b00011 L
b00101 M
b01000 N
b00101 O
1S
#200000
0S
