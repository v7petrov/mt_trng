$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module ramfsm_tb $end
  $var wire 1 8 clk $end
  $var wire 1 9 rst $end
  $var wire 1 : start $end
  $var wire 1 # done $end
  $var wire 1 $ we_rng $end
  $var wire 9 > addr_rng [8:0] $end
  $var wire 1 ; ack_rng $end
  $var wire 1 % ram_cyc_b $end
  $var wire 1 & ram_stb_b $end
  $var wire 4 ? ram_we_b [3:0] $end
  $var wire 9 ' ram_addr_b [8:0] $end
  $var wire 32 ( ram_data_out_b [31:0] $end
  $var wire 1 ) ram_ack_b $end
  $var wire 1 < ram_stall_b $end
  $var wire 1 * aes_cs $end
  $var wire 1 + aes_we $end
  $var wire 8 , aes_address [7:0] $end
  $var wire 32 - aes_write_data [31:0] $end
  $var wire 32 . aes_read_data [31:0] $end
  $var wire 32 / aes_status_counter [31:0] $end
  $scope module dut $end
   $var wire 1 8 clk_i $end
   $var wire 1 9 rst_i $end
   $var wire 1 : start $end
   $var wire 1 $ we_rng $end
   $var wire 9 > addr_rng [8:0] $end
   $var wire 1 ; ack_rng $end
   $var wire 1 % ram_cyc_b $end
   $var wire 1 & ram_stb_b $end
   $var wire 4 ? ram_we_b [3:0] $end
   $var wire 9 ' ram_addr_b [8:0] $end
   $var wire 32 ( ram_data_out_b [31:0] $end
   $var wire 1 ) ram_ack_b $end
   $var wire 1 < ram_stall_b $end
   $var wire 1 * aes_cs $end
   $var wire 1 + aes_we $end
   $var wire 8 , aes_address [7:0] $end
   $var wire 32 - aes_write_data [31:0] $end
   $var wire 32 . aes_read_data [31:0] $end
   $var wire 1 # done $end
   $var wire 4 0 state [3:0] $end
   $var wire 4 = next_state [3:0] $end
   $var wire 3 1 key_word_index [2:0] $end
   $var wire 2 2 block_word_index [1:0] $end
   $var wire 2 3 result_word_index [1:0] $end
   $var wire 32 @ key_buffer[0] [31:0] $end
   $var wire 32 A key_buffer[1] [31:0] $end
   $var wire 32 B key_buffer[2] [31:0] $end
   $var wire 32 C key_buffer[3] [31:0] $end
   $var wire 32 D key_buffer[4] [31:0] $end
   $var wire 32 E key_buffer[5] [31:0] $end
   $var wire 32 F key_buffer[6] [31:0] $end
   $var wire 32 G key_buffer[7] [31:0] $end
   $var wire 32 H block_buffer[0] [31:0] $end
   $var wire 32 I block_buffer[1] [31:0] $end
   $var wire 32 J block_buffer[2] [31:0] $end
   $var wire 32 K block_buffer[3] [31:0] $end
   $var wire 32 4 result_buffer[0] [31:0] $end
   $var wire 32 5 result_buffer[1] [31:0] $end
   $var wire 32 6 result_buffer[2] [31:0] $end
   $var wire 32 7 result_buffer[3] [31:0] $end
   $var wire 9 L KEY_BASE_ADDR [8:0] $end
   $var wire 9 M BLOCK_BASE_ADDR [8:0] $end
   $var wire 9 > RNG_TARGET_ADDR [8:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
b000000000 '
b00000000000000000000000000000000 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b0000 0
b000 1
b00 2
b00 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
08
19
0:
0;
0<
b0000 =
b000011111 >
b0000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b000000000 L
b000010000 M
#5000
b11011110101011011011111011101111 (
b01 3
18
#10000
08
#15000
b10 3
18
#20000
08
09
#25000
b11 3
18
#30000
08
#35000
b00 3
18
#40000
08
#45000
b01 3
18
#50000
08
#55000
b10 3
18
#60000
08
1:
b0001 =
#65000
1$
b0001 0
b11 3
18
b0010 =
#70000
08
0:
#75000
0$
b0010 0
b00 3
18
1;
b0011 =
#80000
08
#85000
1%
1&
b0011 0
b01 3
18
0;
#90000
08
#95000
1)
b10 3
18
b0100 =
#100000
08
#105000
0%
0&
1*
1+
b00010000 ,
b11011110101011011011111011101111 -
b0100 0
b11 3
18
b0011 =
#110000
08
#115000
1%
1&
b000000001 '
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0011 0
b001 1
b00 3
18
#120000
08
#125000
b11011110101011011011111011110000 (
1)
b01 3
18
b0100 =
#130000
08
#135000
0%
0&
b000000000 '
1*
1+
b00010001 ,
b11011110101011011011111011110000 -
b0100 0
b10 3
18
b0011 =
#140000
08
#145000
1%
1&
b000000010 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0011 0
b010 1
b11 3
18
#150000
08
#155000
b11011110101011011011111011110001 (
1)
b00 3
18
b0100 =
#160000
08
#165000
0%
0&
b000000000 '
1*
1+
b00010010 ,
b11011110101011011011111011110001 -
b0100 0
b01 3
18
b0011 =
#170000
08
#175000
1%
1&
b000000011 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0011 0
b011 1
b10 3
18
#180000
08
#185000
b11011110101011011011111011110010 (
1)
b11 3
18
b0100 =
#190000
08
#195000
0%
0&
b000000000 '
1*
1+
b00010011 ,
b11011110101011011011111011110010 -
b0100 0
b00 3
18
b0011 =
#200000
08
#205000
1%
1&
b000000100 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0011 0
b100 1
b01 3
18
#210000
08
#215000
b11011110101011011011111011110011 (
1)
b10 3
18
b0100 =
#220000
08
#225000
0%
0&
b000000000 '
1*
1+
b00010100 ,
b11011110101011011011111011110011 -
b0100 0
b11 3
18
b0011 =
#230000
08
#235000
1%
1&
b000000101 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0011 0
b101 1
b00 3
18
#240000
08
#245000
b11011110101011011011111011110100 (
1)
b01 3
18
b0100 =
#250000
08
#255000
0%
0&
b000000000 '
1*
1+
b00010101 ,
b11011110101011011011111011110100 -
b0100 0
b10 3
18
b0011 =
#260000
08
#265000
1%
1&
b000000110 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0011 0
b110 1
b11 3
18
#270000
08
#275000
b11011110101011011011111011110101 (
1)
b00 3
18
b0100 =
#280000
08
#285000
0%
0&
b000000000 '
1*
1+
b00010110 ,
b11011110101011011011111011110101 -
b0100 0
b01 3
18
b0011 =
#290000
08
#295000
1%
1&
b000000111 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0011 0
b111 1
b10 3
18
#300000
08
#305000
b11011110101011011011111011110110 (
1)
b11 3
18
b0100 =
#310000
08
#315000
0%
0&
b000000000 '
1*
1+
b00010111 ,
b11011110101011011011111011110110 -
b0100 0
b00 3
18
b0101 =
#320000
08
#325000
1%
1&
b000010000 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0101 0
b000 1
b01 3
18
#330000
08
#335000
b11011110101011011011111011111111 (
1)
b10 3
18
b0110 =
#340000
08
#345000
0%
0&
b000000000 '
1*
1+
b00100000 ,
b11011110101011011011111011111111 -
b0110 0
b11 3
18
b0101 =
#350000
08
#355000
1%
1&
b000010001 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0101 0
b01 2
b00 3
18
#360000
08
#365000
b11011110101011011011111100000000 (
1)
b01 3
18
b0110 =
#370000
08
#375000
0%
0&
b000000000 '
1*
1+
b00100001 ,
b11011110101011011011111100000000 -
b0110 0
b10 3
18
b0101 =
#380000
08
#385000
1%
1&
b000010010 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0101 0
b10 2
b11 3
18
#390000
08
#395000
b11011110101011011011111100000001 (
1)
b00 3
18
b0110 =
#400000
08
#405000
0%
0&
b000000000 '
1*
1+
b00100010 ,
b11011110101011011011111100000001 -
b0110 0
b01 3
18
b0101 =
#410000
08
#415000
1%
1&
b000010011 '
b11011110101011011011111011101111 (
0)
0*
0+
b00000000 ,
b00000000000000000000000000000000 -
b0101 0
b11 2
b10 3
18
#420000
08
#425000
b11011110101011011011111100000010 (
1)
b11 3
18
b0110 =
#430000
08
#435000
0%
0&
b000000000 '
1*
1+
b00100011 ,
b11011110101011011011111100000010 -
b0110 0
b00 3
18
b0111 =
#440000
08
#445000
b11011110101011011011111011101111 (
0)
b00001000 ,
b00000000000000000000000000000001 -
b0111 0
b00 2
b01 3
18
b1000 =
#450000
08
#455000
0+
b00001001 ,
b00000000000000000000000000000000 -
b1000 0
b10 3
18
#460000
08
#465000
b00000000000000000000000000000001 .
b00000000000000000000000000000001 /
b11 3
18
b1001 =
#470000
08
#475000
1+
b00001000 ,
b00000000000000000000000000000010 -
b00000000000000000000000000000010 /
b1001 0
b00 3
18
b1010 =
#480000
08
#485000
0+
b00001001 ,
b00000000000000000000000000000000 -
b1010 0
b01 3
18
#490000
08
#495000
b00000000000000000000000000000010 .
b00000000000000000000000000000011 /
b10 3
18
b1011 =
#500000
08
#505000
b00110011 ,
b00000000000000000000000000000100 /
b1011 0
b11 3
18
b1100 =
#510000
08
#515000
1#
0*
b00000000 ,
b11000000110111101100000100010001 .
b1100 0
b00 3
b00000000000000000000000000000010 7
18
b0000 =
#520000
08
#525000
0#
b0000 0
b01 3
18
#530000
08
#535000
b10 3
18
